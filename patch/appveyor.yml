configuration:
  - Release

image:
  - Ubuntu1604
  - Visual Studio 2017
  #  - Ubuntu1804
  #  - Ubuntu2004
  #  - Ubuntu

platform:
  - x64
  - Win32

environment:
  APPVEYOR_YML_DISABLE_PS_LINUX: true

install:
  - git submodule update --init --recursive
  #- ps: |
  #    $env:GIT_TAG = (git describe HEAD | sed -E "s/-.+$//")
  #    Update-AppveyorBuild -Version "$env:GIT_TAG-$env:APPVEYOR_BUILD_NUMBER"
  - ps: |
      Update-AppveyorBuild -Version "$env:APPVEYOR_BUILD_NUMBER"

before_build:
  - sh: sudo apt-get update
  - sh: sudo apt-get install libjack-dev liblhasa-dev librtmidi-dev libsdl2-dev libzzip-dev -y
  - sh: if [ $APPVEYOR_REPO_BRANCH == "master" ]; then ./builder pull && ./builder patch apply; fi
  - sh: git log | head -n1 > milkytracker/commit.txt
  #- sh: zip -q -r source_patched.zip milkytracker
  - sh: if [ $APPVEYOR_REPO_BRANCH == "master" ]; then cd milkytracker; fi
  - sh: if [ $PLATFORM == "Win32" ]; then exit 0; fi 
  - sh: mkdir -p build
  - sh: cd build
  #- cmd: curl -L "https://gnuwin32.sourceforge.net/downlinks/patch-bin-zip.php" -o patch.zip 
  #- cmd: unzip patch.zip
  #- cmd: bin\patch.exe -p0 < patch\all.patch
  #- cmd: curl -L "https://ci.appveyor.com/api/projects/coderofsalvation/milkytrackerx/artifacts/source_patched.zip?branch=master&job=Image:%20Ubuntu1604;%20Platform:%20x64" -o source_patched.zip
  #- cmd: curl -L "https://tinyurl.com/patchedsource" -o source_patched.zip
  #- cmd: unzip source_patched.zip
  - ps: |
      if ($env:APPVEYOR_REPO_BRANCH -eq "master"){ cd milkytracker }
  - cmd: pwd
  - cmd: type commit.txt
  - cmd: rmdir /q /s build
  - cmd: md build
  - cmd: cd build
  - cmd: if %platform% == Win32 cmake -G "Visual Studio 15 2017" -T v140_xp ..
  - cmd: if %platform% == x64 cmake -G "Visual Studio 15 2017 Win64" -T v140_xp ..
  - cmd: dir

cache:
  - milkytracker

build:
    project: milkytracker/build/MilkyTrackerX.sln

for:
-
  matrix:
    only:
      - image: Ubuntu1604
      #- image: Ubuntu
      #- image: Ubuntu1804
      #- image: Ubuntu2004

  build_script:
  - sh: cmake -DCMAKE_BUILD_TYPE=Debug ..
  - sh: pwd
  - sh: make
  - sh: cpack -C %configuration% -D CPACK_GENERATOR="ZIP"
  - sh: cd ..
  - sh: unzip build/milkytracker*.zip 
  - sh: echo create AppImage
  - sh: ls -la
  - sh: cp -r milkytrackerx-* MilkyTrackerX-x86_64.AppDir
  - sh: cd MilkyTrackerX-x86_64.AppDir 
  - sh: echo -e '#!/bin/sh\nHERE="$(dirname "$(readlink -f "${0}")")"\nLD_LIBRARY_PATH="$HERE/usr/lib":$LD_LIBRARY_PATH $HERE/bin/milkytrackerx' > AppRun && chmod +x AppRun
  - sh: mkdir -p usr/lib/x86_64-linux-gnu usr/share
  - sh: find /usr/lib |grep rtmidi
  - sh: cp /usr/lib/x86_64-linux-gnu/librtmidi.so.2v5 usr/lib/x86_64-linux-gnu/.
  - sh: cd usr/lib && ln -s x86_64-linux-gnu/librtmidi.so.2v5 && cd ../..
  - sh: cp ../resources/pictures/carton.png milkytracker.png
  - sh: cp ../resources/milkytracker.desktop .
  - sh: sed -i 's|MilkyTracker|MilkyTrackerX|g;s|Comment=.*|Comment=A Portable SampleTracker DAW|g' milkytracker.desktop
  #- sh: cp ../resources/milkytracker.appdata /usr/share/metainfo
  - sh: find .
  - sh: echo CHECKING LIBS && find . -executable -type f -exec ldd {} \; | grep " => /usr" | cut -d " " -f 2-3 | sort | uniq
  - sh: cd .. 
  - sh: wget 'https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage';
  - sh: chmod +x appimagetool*.AppImage
  - sh: ./appimagetool-* MilkyTrackerX-x86_64.AppDir 
  - sh: pwd



after_build:
  # https://github.com/chocolatey/chocolatey/issues/431
  - cmd: cmake -E remove -f c:\programdata\chocolatey\bin\cpack.exe
  - cmd: cpack -C %configuration%

artifacts:
  - path: source_patched.zip
  - path: Milky*.AppImage
  - path: build\milkytracker*.zip
  - path: milkytracker/Milky*.AppImage
  - path: milkytracker/build\milkytracker*.zip

#deploy:
#  description: Release $(appveyor_repo_tag_name)
#  provider: GitHub
#  auth_token:
#    secure: k4eMw7MSycoyZwL8VfdAS8ejNXnwhFQ0KOVpif3IqyQDUrOGeGRyCHXm7FsD4kjb
#  artifact: /milkytracker.*\.zip/
#  prerelease: false
#  overwrite: true
#  on:
#    configuration: Release
#    appveyor_repo_tag: true        # deploy on tag push only
